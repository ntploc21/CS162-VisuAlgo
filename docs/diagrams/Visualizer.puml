@startuml
abstract "GUI::Component" as C_0000265092519911491147
abstract C_0000265092519911491147 {
+Component() : void
+~Component() : void
+Draw() : void
{abstract} +isSelectable() const = 0 : bool
+isSelected() const : bool
+select() : void
+deselect() : void
+ToggleVisible() : void
+SetVisible() : void
+GetVisible() : bool
+SetPosition() : void
+SetPosition() : void
+GetPosition() : Vector2
+GetSize() : Vector2
#UpdateMouseCursorWhenHover() : void
#UpdateMouseCursorWhenHover() : void
#GetHoverStatus() : bool
#GetHoverStatus() : bool
#mPosition : Vector2
#mVisible : bool
}
class "GUI::Container" as C_0002094582007680481506
class C_0002094582007680481506 {
+Container() : void
+pack() : void
+UnpackAll() : void
+Draw() : void
+isSelectable() const : bool
+GetChildren() : Core::Deque<Component::Ptr>
+DrawCurrent() : void
+GetSize() : Vector2
}
class "GUIVisualizer::Node" as C_0001237744300686102421
class C_0001237744300686102421 {
+SetShape() : void
+GetShape() const : GUIVisualizer::Node::Shape
+Node() : void
+Node() : void
+~Node() : void
+isSelectable() const : bool
+Draw() : void
+SetActive() : void
+IsActive() : bool
+SetValue() : void
+GetValue() const : int
+SetLabel() : void
+ClearLabel() : void
+AnimationOnNode() : void
+SetRadius() : void
+SetValueFontSize() : void
+SetLabelFontSize() : void
+SetNodeState() : void
+GetNodeState() const : GUIVisualizer::Node::State
+SetReachable() : void
+GetReachable() const : bool
}
enum "GUIVisualizer::Node::State" as C_0001527454709186090485
enum C_0001527454709186090485 {
Default
Active
ActiveBlue
ActiveGreen
ActiveRed
Iterated
Hide
StateCount
}
enum "GUIVisualizer::Node::Shape" as C_0000746600118171468782
enum C_0000746600118171468782 {
Circle
Square
ShapeCount
}
abstract "GUIVisualizer::LinkedList" as C_0000014464275109602519
abstract C_0000014464275109602519 {
+SetShape() : void
+GetShape() const : Node::Shape
+LinkedList() : void
+LinkedList() : void
+~LinkedList() : void
+isSelectable() const : bool
{abstract} +Draw() = 0 : void
+size() const : std::size_t
+SetShowHeadAndTail() : void
+SetOrientation() : void
+GetList() : std::vector<Node> &
+GenerateNode() : GUIVisualizer::Node
+Import() : void
+InsertNode() : void
+DeleteNode() : void
+Relayout() : void
#GetNodeDefaultPosition() : Vector2
#fonts : FontHolder *
#mDisplayHeadAndTail : bool
#mOrientation : GUIVisualizer::LinkedList::Orientation
#mShape : Node::Shape
{static} +mNodeDistance : const float
}
enum "GUIVisualizer::LinkedList::ArrowType" as C_0001168259988474363279
enum C_0001168259988474363279 {
Default
Hidden
Active
Skip
ArrowTypeCount
}
enum "GUIVisualizer::LinkedList::Orientation" as C_0000908525336550242927
enum C_0000908525336550242927 {
Horizontal
Vertical
OrientationCount
}
class "GUIVisualizer::CircularLinkedList" as C_0001322664865188165645
class C_0001322664865188165645 {
+CircularLinkedList() : void
+CircularLinkedList() : void
+~CircularLinkedList() : void
+isSelectable() const : bool
+Draw() : void
+Import() : void
+InsertNode() : void
+DeleteNode() : void
+SetCircularArrowType() : void
+GetCircularArrowType() : GUIVisualizer::LinkedList::ArrowType
+SetCircularEnds() : void
+GetCircularEnds() : std::pair<std::size_t,std::size_t>
+SetArrowType() : void
+GetArrowType() : GUIVisualizer::LinkedList::ArrowType
+ResetArrow() : void
}
class "GUIVisualizer::DoublyLinkedList" as C_0001007573430340834079
class C_0001007573430340834079 {
+DoublyLinkedList() : void
+DoublyLinkedList() : void
+~DoublyLinkedList() : void
+isSelectable() const : bool
+Draw() : void
+Import() : void
+InsertNode() : void
+DeleteNode() : void
+SetArrowTypeNext() : void
+SetArrowTypePrev() : void
+GetArrowTypeNext() : GUIVisualizer::LinkedList::ArrowType
+GetArrowTypePrev() : GUIVisualizer::LinkedList::ArrowType
+ResetArrow() : void
}
class "GUIVisualizer::DynamicArray" as C_0001367503263007952105
class C_0001367503263007952105 {
+DynamicArray() : void
+DynamicArray() : void
+isSelectable() const : bool
+~DynamicArray() : void
+Draw() : void
+GetLength() const : std::size_t
+GetCapacity() const : std::size_t
+operator[]() : GUIVisualizer::Node &
+operator[]() const : const GUIVisualizer::Node &
+SetShape() : void
+GetShape() const : Node::Shape
+Reserve() : void
+Resize() : void
+Clear() : void
+GetList() : std::vector<Node> &
+GenerateNode() : GUIVisualizer::Node
+Import() : void
+InsertNode() : void
+Relayout() : void
+DeleteNode() : void
+GetCapacityFromLength() : std::size_t
{static} +mNodeDistance : const float
}
class "GUIVisualizer::SinglyLinkedList" as C_0002081397373997087056
class C_0002081397373997087056 {
+SinglyLinkedList() : void
+SinglyLinkedList() : void
+~SinglyLinkedList() : void
+isSelectable() const : bool
+Draw() : void
+Import() : void
+InsertNode() : void
+DeleteNode() : void
+SetArrowType() : void
+GetArrowType() : GUIVisualizer::LinkedList::ArrowType
+ResetArrow() : void
}
C_0002094582007680481506 ..> C_0000265092519911491147
C_0002094582007680481506 o-- C_0000265092519911491147 : #mChildren
C_0000265092519911491147 <|-- C_0002094582007680481506
C_0000265092519911491147 <|-- C_0001237744300686102421
C_0001527454709186090485 --+ C_0001237744300686102421
C_0000746600118171468782 --+ C_0001237744300686102421
C_0000014464275109602519 ..> C_0001237744300686102421
C_0000014464275109602519 o-- C_0001237744300686102421 : #list
C_0002094582007680481506 <|-- C_0000014464275109602519
C_0001168259988474363279 --+ C_0000014464275109602519
C_0000908525336550242927 --+ C_0000014464275109602519
C_0001322664865188165645 ..> C_0001237744300686102421
C_0000014464275109602519 <|-- C_0001322664865188165645
C_0001007573430340834079 ..> C_0001237744300686102421
C_0000014464275109602519 <|-- C_0001007573430340834079
C_0001367503263007952105 ..> C_0001237744300686102421
C_0001367503263007952105 o-- C_0001237744300686102421 : -list
C_0002094582007680481506 <|-- C_0001367503263007952105
C_0002081397373997087056 ..> C_0001237744300686102421
C_0000014464275109602519 <|-- C_0002081397373997087056

'Generated with clang-uml, version 0.3.4
'LLVM version clang version 15.0.7 (https://github.com/llvm/llvm-project.git 8dfdcc7b7bf66834a761bd8de445840ef68e4d1a)
@enduml
